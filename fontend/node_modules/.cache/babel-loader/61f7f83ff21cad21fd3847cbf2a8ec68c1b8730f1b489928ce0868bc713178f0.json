{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst initialState = {\n  isFilled: false\n};\nexport const postSlice = createSlice({\n  name: \"post\",\n  initialState,\n  reducers: {\n    isFilled: state => {\n      state.isFilled = true;\n    },\n    notFilled: state => {\n      state.isFilled = false;\n    }\n  }\n});\n\n// export const postThunk = (itemInfo) => async (dispatch) => {\n//   console.log(itemInfo);\n//   let response = await axios.post(`http://localhost:8000/post`, itemInfo);\n//   console.log(response.data);\n//   dispatch(isFilled());\n// };\n\nexport const postThunk = _ref => {\n  let {\n    itemName,\n    itemPrice,\n    description,\n    category,\n    photo1,\n    photo2,\n    photo3\n  } = _ref;\n  return async dispatch => {\n    const formData = new FormData();\n    formData.append(\"itemName\", itemName);\n    formData.append(\"itemPrice\", itemPrice);\n    formData.append(\"description\", description);\n    formData.append(\"category\", category);\n    formData.append(\"photo1\", photo1);\n    formData.append(\"photo2\", photo2);\n    formData.append(\"photo3\", photo3);\n    if (photo1) {\n      formData.append(\"photo1Name\", photo1.name);\n    } else {\n      formData.append(\"photo1Name\", \"null\");\n    }\n    if (photo2) {\n      formData.append(\"photo2Name\", photo2.name);\n    } else {\n      formData.append(\"photo2Name\", \"null\");\n    }\n    if (photo3) {\n      formData.append(\"photo2Name\", photo2.name);\n    } else {\n      formData.append(\"photo2Name\", \"null\");\n    }\n    formData.append(\"photo1Name\", photo1.name);\n    formData.append(\"photo2Name\", photo2.name);\n    formData.append(\"photo3Name\", photo3.name);\n    let response = await axios.post(`http://localhost:8000/post`, formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    });\n    dispatch(isFilled());\n  };\n};\nexport const {\n  isFilled,\n  notFilled\n} = postSlice.actions;\nexport default postSlice.reducer;","map":{"version":3,"names":["createSlice","axios","initialState","isFilled","postSlice","name","reducers","state","notFilled","postThunk","itemName","itemPrice","description","category","photo1","photo2","photo3","dispatch","formData","FormData","append","response","post","headers","actions","reducer"],"sources":["/Users/lawfuhin/vscode/speedx/fontend/src/redux/PostSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nconst initialState = {\n  isFilled: false,\n};\n\nexport const postSlice = createSlice({\n  name: \"post\",\n  initialState,\n  reducers: {\n    isFilled: (state) => {\n      state.isFilled = true;\n    },\n    notFilled: (state) => {\n      state.isFilled = false;\n    },\n  },\n});\n\n// export const postThunk = (itemInfo) => async (dispatch) => {\n//   console.log(itemInfo);\n//   let response = await axios.post(`http://localhost:8000/post`, itemInfo);\n//   console.log(response.data);\n//   dispatch(isFilled());\n// };\n\nexport const postThunk =\n  ({ itemName, itemPrice, description, category, photo1, photo2, photo3 }) =>\n  async (dispatch) => {\n    const formData = new FormData();\n    formData.append(\"itemName\", itemName);\n    formData.append(\"itemPrice\", itemPrice);\n    formData.append(\"description\", description);\n    formData.append(\"category\", category);\n    formData.append(\"photo1\", photo1);\n    formData.append(\"photo2\", photo2);\n    formData.append(\"photo3\", photo3);\n\n    if (photo1) {\n      formData.append(\"photo1Name\", photo1.name);\n    } else {\n      formData.append(\"photo1Name\", \"null\");\n    }\n\n    if (photo2) {\n      formData.append(\"photo2Name\", photo2.name);\n    } else {\n      formData.append(\"photo2Name\", \"null\");\n    }\n\n    if (photo3) {\n      formData.append(\"photo2Name\", photo2.name);\n    } else {\n      formData.append(\"photo2Name\", \"null\");\n    }\n\n    formData.append(\"photo1Name\", photo1.name);\n    formData.append(\"photo2Name\", photo2.name);\n    formData.append(\"photo3Name\", photo3.name);\n\n    let response = await axios.post(`http://localhost:8000/post`, formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n      },\n    });\n    dispatch(isFilled());\n  };\n\nexport const { isFilled, notFilled } = postSlice.actions;\n\nexport default postSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG;EACnBC,QAAQ,EAAE;AACZ,CAAC;AAED,OAAO,MAAMC,SAAS,GAAGJ,WAAW,CAAC;EACnCK,IAAI,EAAE,MAAM;EACZH,YAAY;EACZI,QAAQ,EAAE;IACRH,QAAQ,EAAGI,KAAK,IAAK;MACnBA,KAAK,CAACJ,QAAQ,GAAG,IAAI;IACvB,CAAC;IACDK,SAAS,EAAGD,KAAK,IAAK;MACpBA,KAAK,CAACJ,QAAQ,GAAG,KAAK;IACxB;EACF;AACF,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMM,SAAS,GACpB;EAAA,IAAC;IAAEC,QAAQ;IAAEC,SAAS;IAAEC,WAAW;IAAEC,QAAQ;IAAEC,MAAM;IAAEC,MAAM;IAAEC;EAAO,CAAC;EAAA,OACvE,MAAOC,QAAQ,IAAK;IAClB,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/BD,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEV,QAAQ,CAAC;IACrCQ,QAAQ,CAACE,MAAM,CAAC,WAAW,EAAET,SAAS,CAAC;IACvCO,QAAQ,CAACE,MAAM,CAAC,aAAa,EAAER,WAAW,CAAC;IAC3CM,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEP,QAAQ,CAAC;IACrCK,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAEN,MAAM,CAAC;IACjCI,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAEL,MAAM,CAAC;IACjCG,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAEJ,MAAM,CAAC;IAEjC,IAAIF,MAAM,EAAE;MACVI,QAAQ,CAACE,MAAM,CAAC,YAAY,EAAEN,MAAM,CAACT,IAAI,CAAC;IAC5C,CAAC,MAAM;MACLa,QAAQ,CAACE,MAAM,CAAC,YAAY,EAAE,MAAM,CAAC;IACvC;IAEA,IAAIL,MAAM,EAAE;MACVG,QAAQ,CAACE,MAAM,CAAC,YAAY,EAAEL,MAAM,CAACV,IAAI,CAAC;IAC5C,CAAC,MAAM;MACLa,QAAQ,CAACE,MAAM,CAAC,YAAY,EAAE,MAAM,CAAC;IACvC;IAEA,IAAIJ,MAAM,EAAE;MACVE,QAAQ,CAACE,MAAM,CAAC,YAAY,EAAEL,MAAM,CAACV,IAAI,CAAC;IAC5C,CAAC,MAAM;MACLa,QAAQ,CAACE,MAAM,CAAC,YAAY,EAAE,MAAM,CAAC;IACvC;IAEAF,QAAQ,CAACE,MAAM,CAAC,YAAY,EAAEN,MAAM,CAACT,IAAI,CAAC;IAC1Ca,QAAQ,CAACE,MAAM,CAAC,YAAY,EAAEL,MAAM,CAACV,IAAI,CAAC;IAC1Ca,QAAQ,CAACE,MAAM,CAAC,YAAY,EAAEJ,MAAM,CAACX,IAAI,CAAC;IAE1C,IAAIgB,QAAQ,GAAG,MAAMpB,KAAK,CAACqB,IAAI,CAAE,4BAA2B,EAAEJ,QAAQ,EAAE;MACtEK,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IACFN,QAAQ,CAACd,QAAQ,EAAE,CAAC;EACtB,CAAC;AAAA;AAEH,OAAO,MAAM;EAAEA,QAAQ;EAAEK;AAAU,CAAC,GAAGJ,SAAS,CAACoB,OAAO;AAExD,eAAepB,SAAS,CAACqB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}