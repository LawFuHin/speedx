{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst initialState = {\n  isAuthenticated: false\n};\nexport const authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    signin: state => {\n      state.isAuthenticated = true;\n    },\n    signout: state => {\n      state.isAuthenticated = false;\n    }\n  }\n});\nexport const signupThunk = _ref => {\n  let {\n    username,\n    password\n  } = _ref;\n  return async () => {\n    console.log({\n      username,\n      password\n    });\n    let response = await axios.post(`http://localhost:8000/signup`, {\n      username,\n      password\n    });\n    console.log(response.data);\n  };\n};\nexport const signinThunk = _ref2 => {\n  let {\n    username,\n    password\n  } = _ref2;\n  return async dispatch => {\n    console.log({\n      username,\n      password\n    });\n    let response = await axios.post(`http://localhost:8000/signin`, {\n      username,\n      password\n    });\n    // console.log(\"token\", response.data);\n    localStorage.setItem(\"token\", response.data.token);\n    dispatch(signin());\n  };\n};\n\n// Action creators are generated for each case reducer fu nction\nexport const {\n  signin,\n  signout\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","axios","initialState","isAuthenticated","authSlice","name","reducers","signin","state","signout","signupThunk","username","password","console","log","response","post","data","signinThunk","dispatch","localStorage","setItem","token","actions","reducer"],"sources":["/Users/lawfuhin/vscode/speedx/fontend/src/redux/AuthSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst initialState = {\n  isAuthenticated: false,\n};\n\nexport const authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    signin: (state) => {\n      state.isAuthenticated = true;\n    },\n    signout: (state) => {\n      state.isAuthenticated = false;\n    },\n  },\n});\n\nexport const signupThunk =\n  ({ username, password }) =>\n  async () => {\n    console.log({ username, password });\n    let response = await axios.post(`http://localhost:8000/signup`, {\n      username,\n      password,\n    });\n    console.log(response.data);\n  };\n\nexport const signinThunk =\n  ({ username, password }) =>\n  async (dispatch) => {\n    console.log({ username, password });\n    let response = await axios.post(`http://localhost:8000/signin`, {\n      username,\n      password,\n    });\n    // console.log(\"token\", response.data);\n    localStorage.setItem(\"token\", response.data.token);\n    dispatch(signin());\n  };\n\n// Action creators are generated for each case reducer fu nction\nexport const { signin, signout } = authSlice.actions;\n\nexport default authSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AACzB,MAAMC,YAAY,GAAG;EACnBC,eAAe,EAAE;AACnB,CAAC;AAED,OAAO,MAAMC,SAAS,GAAGJ,WAAW,CAAC;EACnCK,IAAI,EAAE,MAAM;EACZH,YAAY;EACZI,QAAQ,EAAE;IACRC,MAAM,EAAGC,KAAK,IAAK;MACjBA,KAAK,CAACL,eAAe,GAAG,IAAI;IAC9B,CAAC;IACDM,OAAO,EAAGD,KAAK,IAAK;MAClBA,KAAK,CAACL,eAAe,GAAG,KAAK;IAC/B;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAMO,WAAW,GACtB;EAAA,IAAC;IAAEC,QAAQ;IAAEC;EAAS,CAAC;EAAA,OACvB,YAAY;IACVC,OAAO,CAACC,GAAG,CAAC;MAAEH,QAAQ;MAAEC;IAAS,CAAC,CAAC;IACnC,IAAIG,QAAQ,GAAG,MAAMd,KAAK,CAACe,IAAI,CAAE,8BAA6B,EAAE;MAC9DL,QAAQ;MACRC;IACF,CAAC,CAAC;IACFC,OAAO,CAACC,GAAG,CAACC,QAAQ,CAACE,IAAI,CAAC;EAC5B,CAAC;AAAA;AAEH,OAAO,MAAMC,WAAW,GACtB;EAAA,IAAC;IAAEP,QAAQ;IAAEC;EAAS,CAAC;EAAA,OACvB,MAAOO,QAAQ,IAAK;IAClBN,OAAO,CAACC,GAAG,CAAC;MAAEH,QAAQ;MAAEC;IAAS,CAAC,CAAC;IACnC,IAAIG,QAAQ,GAAG,MAAMd,KAAK,CAACe,IAAI,CAAE,8BAA6B,EAAE;MAC9DL,QAAQ;MACRC;IACF,CAAC,CAAC;IACF;IACAQ,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEN,QAAQ,CAACE,IAAI,CAACK,KAAK,CAAC;IAClDH,QAAQ,CAACZ,MAAM,EAAE,CAAC;EACpB,CAAC;AAAA;;AAEH;AACA,OAAO,MAAM;EAAEA,MAAM;EAAEE;AAAQ,CAAC,GAAGL,SAAS,CAACmB,OAAO;AAEpD,eAAenB,SAAS,CAACoB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}