{"ast":null,"code":"var _jsxFileName = \"/Users/lawfuhin/vscode/speedx/fontend/src/Components/Post.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { postThunk } from \"../redux/PostSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Post() {\n  _s();\n  // const [itemName, setItemName] = useState(\"\");\n  // const [itemPrice, setItemPrice] = useState(\"\");\n  // const [description, setDescription] = useState(\"\");\n  // const [category, setCategory] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  // dispatch(postThunk(itemInfo));\n\n  const [itemInfo, setItemInfo] = useState({\n    itemName: \"\",\n    itemPrice: \"\",\n    description: \"\",\n    category: \"\"\n  });\n  const categoryChoice = [\"category1\", \"category2\", \"category3\", \"category4\", \"category5\", \"category6\", \"category7\", \"category8\", \"category9\", \"category10\"];\n  const handleSubmit = event => {\n    event.preventDefault();\n    const {\n      info,\n      value\n    } = event.target;\n    setItemInfo(prevValue => ({\n      ...prevValue,\n      [info]: value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"itemName\",\n          children: \"Item Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"itemName\",\n          onChange: handleSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"itemPrice\",\n          children: \"Item Price:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"itemPrice\",\n          step: \"0.01\",\n          min: \"0\",\n          onChange: handleSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"description\",\n          children: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"description\",\n          onChange: handleSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"category\",\n          children: \"Category:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"category\",\n          onChange: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            disabled: true,\n            children: \"Choose a category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), categoryChoice.map(choice => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: choice,\n            children: choice\n          }, choice, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: () => {\n          console.log(\"test\").then();\n        },\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n// import React, { useState } from \"react\";\n\n// const ItemForm = () => {\n//   const [itemName, setItemName] = useState(\"\");\n//   const [itemPrice, setItemPrice] = useState(\"\");\n//   const [description, setDescription] = useState(\"\");\n//   const [category, setCategory] = useState(\"\");\n//   const categoryChoiceChoice = [\"Electronics\", \"Fashion\", \"Home & Garden\", \"Sports\"];\n\n//   const handleSubmit = (event) => {\n//     event.preventDefault();\n//     // Add logic to submit the form data to the server\n//   };\n\n//   return (\n//     <form onSubmit={handleSubmit}>\n//       <div>\n//         <label htmlFor=\"itemName\">Item Name:</label>\n//         <input\n//           type=\"text\"\n//           id=\"itemName\"\n//           value={itemName}\n//           onChange={(event) => setItemName(event.target.value)}\n//         />\n//       </div>\n//       <div>\n//         <label htmlFor=\"itemPrice\">Item Price:</label>\n//         <input\n//           type=\"text\"\n//           id=\"itemPrice\"\n//           value={itemPrice}\n//           onChange={(event) => setItemPrice(event.target.value)}\n//         />\n//       </div>\n//       <div>\n//         <label htmlFor=\"description\">Description:</label>\n//         <textarea\n//           id=\"description\"\n//           value={description}\n//           onChange={(event) => setDescription(event.target.value)}\n//         />\n//       </div>\n//       <div>\n//         <label htmlFor=\"category\">Category:</label>\n//         <select\n//           id=\"category\"\n//           value={category}\n//           onChange={(event) => setCategory(event.target.value)}\n//         >\n//           <option value=\"\" disabled>\n//             Choose a category\n//           </option>\n//           {categoryChoiceChoice.map((cat) => (\n//             <option key={cat} value={cat}>\n//               {cat}\n//             </option>\n//           ))}\n//         </select>\n//       </div>\n//       <button type=\"submit\">Submit</button>\n//     </form>\n//   );\n// };\n\n// export default ItemForm;\n_s(Post, \"3WRpkRv942V9/R74l0qZMvBrvr0=\", false, function () {\n  return [useDispatch];\n});\n_c = Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["React","useState","useDispatch","postThunk","Post","dispatch","itemInfo","setItemInfo","itemName","itemPrice","description","category","categoryChoice","handleSubmit","event","preventDefault","info","value","target","prevValue","map","choice","console","log","then"],"sources":["/Users/lawfuhin/vscode/speedx/fontend/src/Components/Post.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { postThunk } from \"../redux/PostSlice\";\n\nexport default function Post() {\n  // const [itemName, setItemName] = useState(\"\");\n  // const [itemPrice, setItemPrice] = useState(\"\");\n  // const [description, setDescription] = useState(\"\");\n  // const [category, setCategory] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  // dispatch(postThunk(itemInfo));\n\n  const [itemInfo, setItemInfo] = useState({\n    itemName: \"\",\n    itemPrice: \"\",\n    description: \"\",\n    category: \"\",\n  });\n\n  const categoryChoice = [\n    \"category1\",\n    \"category2\",\n    \"category3\",\n    \"category4\",\n    \"category5\",\n    \"category6\",\n    \"category7\",\n    \"category8\",\n    \"category9\",\n    \"category10\",\n  ];\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const { info, value } = event.target;\n    setItemInfo((prevValue) => ({\n      ...prevValue,\n      [info]: value,\n    }));\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label htmlFor=\"itemName\">Item Name:</label>\n          <input type=\"text\" id=\"itemName\" onChange={handleSubmit} />\n        </div>\n        <div>\n          <label htmlFor=\"itemPrice\">Item Price:</label>\n          <input\n            type=\"number\"\n            id=\"itemPrice\"\n            step=\"0.01\"\n            min=\"0\"\n            onChange={handleSubmit}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"description\">Description:</label>\n          <textarea id=\"description\" onChange={handleSubmit} />\n        </div>\n        <div>\n          <label htmlFor=\"category\">Category:</label>\n          <select id=\"category\" onChange={handleSubmit}>\n            <option value=\"\" disabled>\n              Choose a category\n            </option>\n            {categoryChoice.map((choice) => (\n              <option key={choice} value={choice}>\n                {choice}\n              </option>\n            ))}\n          </select>\n        </div>\n        <button\n          type=\"submit\"\n          onClick={() => {\n            console.log(\"test\").then();\n\n          }}>\n          Submit\n        </button>\n      </form>\n    </div>\n  );\n}\n\n// import React, { useState } from \"react\";\n\n// const ItemForm = () => {\n//   const [itemName, setItemName] = useState(\"\");\n//   const [itemPrice, setItemPrice] = useState(\"\");\n//   const [description, setDescription] = useState(\"\");\n//   const [category, setCategory] = useState(\"\");\n//   const categoryChoiceChoice = [\"Electronics\", \"Fashion\", \"Home & Garden\", \"Sports\"];\n\n//   const handleSubmit = (event) => {\n//     event.preventDefault();\n//     // Add logic to submit the form data to the server\n//   };\n\n//   return (\n//     <form onSubmit={handleSubmit}>\n//       <div>\n//         <label htmlFor=\"itemName\">Item Name:</label>\n//         <input\n//           type=\"text\"\n//           id=\"itemName\"\n//           value={itemName}\n//           onChange={(event) => setItemName(event.target.value)}\n//         />\n//       </div>\n//       <div>\n//         <label htmlFor=\"itemPrice\">Item Price:</label>\n//         <input\n//           type=\"text\"\n//           id=\"itemPrice\"\n//           value={itemPrice}\n//           onChange={(event) => setItemPrice(event.target.value)}\n//         />\n//       </div>\n//       <div>\n//         <label htmlFor=\"description\">Description:</label>\n//         <textarea\n//           id=\"description\"\n//           value={description}\n//           onChange={(event) => setDescription(event.target.value)}\n//         />\n//       </div>\n//       <div>\n//         <label htmlFor=\"category\">Category:</label>\n//         <select\n//           id=\"category\"\n//           value={category}\n//           onChange={(event) => setCategory(event.target.value)}\n//         >\n//           <option value=\"\" disabled>\n//             Choose a category\n//           </option>\n//           {categoryChoiceChoice.map((cat) => (\n//             <option key={cat} value={cat}>\n//               {cat}\n//             </option>\n//           ))}\n//         </select>\n//       </div>\n//       <button type=\"submit\">Submit</button>\n//     </form>\n//   );\n// };\n\n// export default ItemForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}