{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst initialState = {\n  isFilled: false\n};\nexport const postSlice = createSlice({\n  name: \"post\",\n  initialState,\n  reducers: {\n    isFilled: state => {\n      state.isFilled = true;\n    },\n    notFilled: state => {\n      state.isFilled = false;\n    }\n  }\n});\n{\n  itemName, itemPrice, description, category;\n}\nexport const postThunk = _ref => {\n  let {\n    itemName,\n    itemPrice,\n    description,\n    category\n  } = _ref;\n  return async () => {\n    console.log({\n      itemName,\n      itemPrice,\n      description,\n      category\n    });\n    let response = await axios.post(`http://localhost:8000/post`, {\n      itemName,\n      itemPrice,\n      description,\n      category\n    });\n    console.log(response.data);\n    dispatch(isFilled);\n  };\n};\nexport const {\n  isFilled,\n  notFilled\n} = authSlice.actions;\nexport default postSlice.reducer;","map":{"version":3,"names":["createSlice","axios","initialState","isFilled","postSlice","name","reducers","state","notFilled","itemName","itemPrice","description","category","postThunk","console","log","response","post","data","dispatch","authSlice","actions","reducer"],"sources":["/Users/lawfuhin/vscode/speedx/fontend/src/redux/PostSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nconst initialState = {\n  isFilled: false,\n};\n\nexport const postSlice = createSlice({\n  name: \"post\",\n  initialState,\n  reducers: {\n    isFilled: (state) => {\n      state.isFilled = true;\n    },\n    notFilled: (state) => {\n      state.isFilled = false;\n    },\n  },\n});\n\n{\n  itemName, itemPrice, description, category;\n}\n\nexport const postThunk =\n  ({ itemName, itemPrice, description, category }) =>\n  async () => {\n    console.log({ itemName, itemPrice, description, category });\n    let response = await axios.post(`http://localhost:8000/post`, {\n      itemName,\n      itemPrice,\n      description,\n      category,\n    });\n    console.log(response.data);\n    dispatch(isFilled);\n  };\n\nexport const { isFilled, notFilled } = authSlice.actions;\n\nexport default postSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG;EACnBC,QAAQ,EAAE;AACZ,CAAC;AAED,OAAO,MAAMC,SAAS,GAAGJ,WAAW,CAAC;EACnCK,IAAI,EAAE,MAAM;EACZH,YAAY;EACZI,QAAQ,EAAE;IACRH,QAAQ,EAAGI,KAAK,IAAK;MACnBA,KAAK,CAACJ,QAAQ,GAAG,IAAI;IACvB,CAAC;IACDK,SAAS,EAAGD,KAAK,IAAK;MACpBA,KAAK,CAACJ,QAAQ,GAAG,KAAK;IACxB;EACF;AACF,CAAC,CAAC;AAEF;EACEM,QAAQ,EAAEC,SAAS,EAAEC,WAAW,EAAEC,QAAQ;AAC5C;AAEA,OAAO,MAAMC,SAAS,GACpB;EAAA,IAAC;IAAEJ,QAAQ;IAAEC,SAAS;IAAEC,WAAW;IAAEC;EAAS,CAAC;EAAA,OAC/C,YAAY;IACVE,OAAO,CAACC,GAAG,CAAC;MAAEN,QAAQ;MAAEC,SAAS;MAAEC,WAAW;MAAEC;IAAS,CAAC,CAAC;IAC3D,IAAII,QAAQ,GAAG,MAAMf,KAAK,CAACgB,IAAI,CAAE,4BAA2B,EAAE;MAC5DR,QAAQ;MACRC,SAAS;MACTC,WAAW;MACXC;IACF,CAAC,CAAC;IACFE,OAAO,CAACC,GAAG,CAACC,QAAQ,CAACE,IAAI,CAAC;IAC1BC,QAAQ,CAAChB,QAAQ,CAAC;EACpB,CAAC;AAAA;AAEH,OAAO,MAAM;EAAEA,QAAQ;EAAEK;AAAU,CAAC,GAAGY,SAAS,CAACC,OAAO;AAExD,eAAejB,SAAS,CAACkB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}